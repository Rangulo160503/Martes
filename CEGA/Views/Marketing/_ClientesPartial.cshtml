@model IEnumerable<CEGA.Models.ClienteMarketing>

@{
    var count = Model?.Count() ?? 0;
}

<!-- Header -->
<div class="d-flex justify-content-between align-items-center mt-2 mb-2">
    <h4 class="mb-0">Clientes registrados</h4>
    <span class="text-muted small">@count registro(s)</span>
</div>

<!-- Alta de cliente (SIEMPRE ARRIBA) -->
<div class="card card-lg mb-3">
    <div class="card-header">Agregar cliente</div>
    <div class="card-body">
        <form asp-action="CrearCliente"
              asp-controller="Marketing"
              method="post"
              class="row g-2"
              novalidate>
            @Html.AntiForgeryToken()

            <div class="col-md-5">
                <label class="form-label" for="nuevoNombre">Nombre</label>
                <input id="nuevoNombre" name="Nombre" class="form-control" placeholder="Nombre del cliente" required />
            </div>

            <div class="col-md-5">
                <label class="form-label" for="nuevoCorreo">Correo electrónico</label>
                <input id="nuevoCorreo" name="Correo" type="email" class="form-control" placeholder="correo@dominio.com" required />
            </div>

            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-accent w-100">Agregar</button>
            </div>
        </form>
    </div>
</div>

<!-- Listado (ABAJO) -->
@if (Model != null && Model.Any())
{
    <div class="card mb-3">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="min-width:220px;">Nombre</th>
                            <th style="min-width:280px;">Correo</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cli in Model)
                        {
                            var rowId = $"row_{cli.Id}";
                            <tr id="@rowId">
                                <td>
                                    <input class="form-control form-control-sm"
                                           name="Nombre"
                                           value="@cli.Nombre"
                                           disabled
                                           data-field="nombre" />
                                </td>
                                <td>
                                    <input class="form-control form-control-sm"
                                           name="Correo"
                                           type="email"
                                           value="@cli.Correo"
                                           disabled
                                           data-field="correo" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">No hay clientes registrados.</div>
}

@section Scripts {
    <script>
        (function () {
            // Habilita edición en línea y sincroniza valores para el submit
            function enableEdit(rowId) {
                const row = document.getElementById(rowId);
                if (!row) return;

                const inputs = row.querySelectorAll('input[data-field]');
                inputs.forEach(i => i.removeAttribute('disabled'));

                const saveForm = row.querySelector('form[data-form="save"]');
                const saveBtn  = saveForm?.querySelector('button[type="submit"]');
                if (saveBtn) saveBtn.removeAttribute('disabled');

                // Copia cambios de inputs visibles a los hidden del form de guardar
                inputs.forEach(inp => {
                    inp.addEventListener('input', () => {
                        const key = inp.getAttribute('data-field'); // nombre | correo
                        const hidden = saveForm?.querySelector(`input[data-sync="${key}"]`);
                        if (hidden) hidden.value = inp.value;
                    });
                });
            }

            // Delegación: click en "Modificar"
            document.addEventListener('click', function (e) {
                const btn = e.target.closest('button[data-action="edit"]');
                if (!btn) return;
                const rowId = btn.getAttribute('data-target');
                enableEdit(rowId);
            });
        })();
    </script>
}
    