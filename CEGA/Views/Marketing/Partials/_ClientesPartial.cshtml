@model IEnumerable<CEGA.Models.ClienteMarketing>

@{
    var count = Model?.Count() ?? 0;
}

<!-- Header -->
<div class="d-flex justify-content-between align-items-center mt-2 mb-2">
    <h4 class="mb-0">Clientes registrados</h4>
    <span class="text-muted small">@count registro(s)</span>
</div>

<!-- Alta de cliente (arriba) -->
<div class="card card-lg mb-3">
    <div class="card-header">Agregar cliente</div>
    <div class="card-body">
        <form asp-action="CrearCliente" asp-controller="Marketing" method="post" class="row g-2" novalidate>
            @Html.AntiForgeryToken()
            <div class="col-md-5">
                <label class="form-label" for="nuevoNombre">Nombre</label>
                <input id="nuevoNombre" name="Nombre" class="form-control" placeholder="Nombre del cliente" required />
                <span class="text-danger" data-valmsg-for="Nombre" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-5">
                <label class="form-label" for="nuevoCorreo">Correo electrónico</label>
                <input id="nuevoCorreo" name="Correo" type="email" class="form-control" placeholder="correo@dominio.com" required />
                <span class="text-danger" data-valmsg-for="Correo" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-accent w-100">Agregar</button>
            </div>
        </form>
    </div>
</div>

<!-- Listado (abajo) -->
@if (Model != null && Model.Any())
{
    <div class="card mb-3">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="min-width:220px;">Nombre</th>
                            <th style="min-width:280px;">Correo</th>
                            <th class="text-end" style="width:260px;">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cli in Model)
                        {
                            var rowId = $"row_{cli.Id}";
                            <tr id="@rowId">
                                <td>
                                    <input class="form-control form-control-sm"
                                           name="Nombre" value="@cli.Nombre"
                                           disabled data-field="nombre" />
                                </td>
                                <td>
                                    <input class="form-control form-control-sm"
                                           name="Correo" type="email" value="@cli.Correo"
                                           disabled data-field="correo" />
                                </td>
                                <td class="text-end">
                                    <div class="d-flex justify-content-end gap-2">
                                        <button type="button"
                                                class="btn btn-sm btn-outline-primary"
                                                data-action="edit" data-target="@rowId">
                                            Editar
                                        </button>

                                        <form asp-action="ActualizarCliente" asp-controller="Marketing"
                                              method="post" data-form="save" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@cli.Id" />
                                            <input type="hidden" name="Nombre" value="@cli.Nombre" data-sync="nombre" />
                                            <input type="hidden" name="Correo" value="@cli.Correo" data-sync="correo" />
                                            <button type="submit" class="btn btn-sm btn-success" disabled>Guardar</button>
                                        </form>

                                        <button type="button"
                                                class="btn btn-sm btn-secondary d-none"
                                                data-action="cancel" data-target="@rowId">
                                            Cancelar
                                        </button>

                                        <form asp-action="EliminarCliente" asp-controller="Marketing"
                                              method="post" class="d-inline"
                                              onsubmit="return confirm('¿Eliminar este cliente?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@cli.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger">Eliminar</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning mb-0">No hay clientes registrados.</div>
}

    <script>
        (function () {
            function enableEdit(rowId) {
                const row = document.getElementById(rowId);
                if (!row) return;

                const inputs = row.querySelectorAll('input[data-field]');
                inputs.forEach(i => i.removeAttribute('disabled'));

                const saveForm = row.querySelector('form[data-form="save"]');
                const saveBtn  = saveForm?.querySelector('button[type="submit"]');
                if (saveBtn) saveBtn.removeAttribute('disabled');

                const btnEdit   = row.querySelector('button[data-action="edit"]');
                const btnCancel = row.querySelector('button[data-action="cancel"]');
                if (btnEdit)   btnEdit.classList.add('d-none');
                if (btnCancel) btnCancel.classList.remove('d-none');

                // Sincroniza cambios de inputs visibles a los hidden del form de guardar
                inputs.forEach(inp => {
                    inp.addEventListener('input', () => {
                        const key = inp.getAttribute('data-field'); // nombre | correo
                        const hidden = saveForm?.querySelector(`input[data-sync="${key}"]`);
                        if (hidden) hidden.value = inp.value;
                    }, { once: false });
                });
            }

            document.addEventListener('click', function (e) {
                const editBtn = e.target.closest('button[data-action="edit"]');
                if (editBtn) {
                    enableEdit(editBtn.getAttribute('data-target'));
                    return;
                }

                const cancelBtn = e.target.closest('button[data-action="cancel"]');
                if (cancelBtn) {
                    // Regresa al estado inicial sin guardar
                    window.location.reload();
                }
            });
        })();
    </script>

