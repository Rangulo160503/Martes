@model IEnumerable<CEGA.Models.EmpleadosSalarios>
@using System.Globalization
@using System.Linq
@using CEGA.Models

@{
    ViewData["Title"] = "Resumen de Empleados";

    // Datos auxiliares
    var incapacidades = ViewBag.Incapacidades as IEnumerable<IncapacidadEmpleado>;
    var puestos       = ViewBag.Puestos       as IEnumerable<PuestoEmpleado>;
    var vacaciones    = ViewBag.Vacaciones    as IEnumerable<VacacionesEmpleado>;
    var empleados     = ViewBag.Empleados     as IEnumerable<ApplicationUser>;

    // Áreas/Departamentos
    var depBag = ViewBag.Departamentos as IEnumerable<string>;
    var deptos = (depBag != null && depBag.Any())
        ? depBag
        : (puestos ?? Enumerable.Empty<PuestoEmpleado>())
            .Where(p => !string.IsNullOrWhiteSpace(p.Puesto))
            .Select(p => p.Puesto)
            .Distinct(StringComparer.OrdinalIgnoreCase)
            .OrderBy(p => p);

    // Puesto actual por usuario
    var puestoActualPorId = (puestos ?? Enumerable.Empty<PuestoEmpleado>())
        .GroupBy(p => p.UsuarioID)
        .ToDictionary(
            g => g.Key,
            g => g.OrderByDescending(x => x.FechaAsignacion).FirstOrDefault()?.Puesto ?? "—"
        );

    // Nombre mostrado por usuario
    var nombrePorId = new Dictionary<string, string>();
    if (empleados != null)
    {
        foreach (var emp in empleados)
        {
            var display = string.IsNullOrWhiteSpace(($"{emp?.Nombre} {emp?.Apellido}").Trim())
                ? (emp?.UserName ?? emp?.Id)
                : $"{emp?.Nombre?.Trim()} {emp?.Apellido?.Trim()}";
            if (!string.IsNullOrEmpty(emp?.Id))
                nombrePorId[emp.Id] = display!;
        }
    }

    int totalUsuarios = Model?.Select(m => m.UsuarioId).Where(id => !string.IsNullOrWhiteSpace(id)).Distinct().Count() ?? 0;

    Func<string, string> BadgeClase = estado =>
    {
        if (string.IsNullOrWhiteSpace(estado)) return "bg-warning";
        return estado.Equals("Aprobado", StringComparison.OrdinalIgnoreCase) ? "bg-success"
             : estado.Equals("Rechazado", StringComparison.OrdinalIgnoreCase) ? "bg-danger"
             : "bg-warning";
    };
}

<!-- Header + filtros -->
<div class="mb-3">
    <div class="d-flex flex-wrap justify-content-between align-items-end gap-2">
        <div>
            <h4 class="mb-1">Resumen de empleados</h4>
            <p class="text-muted mb-0">Explora salario, puesto, vacaciones e incapacidades por empleado.</p>
        </div>
        <div class="text-muted small">Total empleados: <strong id="countTotal">@totalUsuarios</strong></div>
    </div>

    <div class="card mt-2">
        <div class="card-body">
            <div class="row g-2">
                <!-- Filtro por Empleado (Nombre — Puesto) -->
                <div class="col-md-4">
                    <label class="form-label" for="fEmpleado">Empleado (Nombre — Puesto)</label>
                    <select id="fEmpleado" class="form-select">
                        <option value="">Todos</option>
                        @if (empleados != null)
                        {
                            foreach (var e in empleados.OrderBy(x => x.UserName))
                            {
                                var nombre = nombrePorId.ContainsKey(e.Id) ? nombrePorId[e.Id] : (e.UserName ?? e.Id);
                                var puesto = puestoActualPorId.ContainsKey(e.Id) ? puestoActualPorId[e.Id] : "—";
                                <option value="@e.Id">@($"{nombre} — {puesto}")</option>
                            }
                        }
                    </select>
                </div>

                <!-- Búsqueda libre -->
                <div class="col-md-4">
                    <label class="form-label" for="fTexto">Buscar</label>
                    <input id="fTexto" class="form-control" placeholder="Usuario, puesto..." />
                </div>
            </div>
            <div class="row g-2 mt-1">
                <div class="col-md-12 d-flex">
                    <button type="button" id="btnAplicar" class="btn btn-primary">Aplicar filtros</button>
                    <button type="button" id="btnLimpiar" class="btn btn-outline-secondary ms-auto">Limpiar filtros</button>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <div class="card">
        <div class="card-header">Listado</div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle mb-0" id="tablaResumen">
                    <thead>
                        <tr>
                            <th style="min-width:220px;">Usuario</th>
                            <th>Salario mensual</th>
                            <th>Fecha registro</th>
                            <th style="width:320px;">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var s in Model)
                        {
                            var uid   = s.UsuarioId ?? "";
                            var rid   = $"res_{uid}_{s.FechaRegistro.Ticks}".Replace(" ", "_");

                            var lastInc = (incapacidades ?? Enumerable.Empty<IncapacidadEmpleado>())
                                .Where(x => x.UsuarioID == uid)
                                .OrderByDescending(x => x.Id)
                                .FirstOrDefault();

                            var lastPuesto = (puestos ?? Enumerable.Empty<PuestoEmpleado>())
                                .Where(x => x.UsuarioID == uid)
                                .OrderByDescending(x => x.FechaAsignacion)
                                .FirstOrDefault();

                            var lastVac = (vacaciones ?? Enumerable.Empty<VacacionesEmpleado>())
                                .Where(x => x.UsuarioID == uid)
                                .OrderByDescending(x => x.FechaSolicitud)
                                .FirstOrDefault();

                            var area   = lastPuesto?.Puesto ?? "General";
                            var nombre = nombrePorId.ContainsKey(uid) ? nombrePorId[uid] : uid;
                            var puestoTxt = area;

                            <tr class="emp-row"
                                data-usuario="@uid"
                                data-area="@area"
                                data-nombre="@nombre"
                                data-puesto="@puestoTxt"
                                data-text="@($"{nombre} {puestoTxt} {uid}")">
                                <td class="fw-semibold">@nombre</td>
                                <td>@s.SalarioMensual.ToString("C", CultureInfo.GetCultureInfo("es-CR"))</td>
                                <td>@s.FechaRegistro.ToShortDateString()</td>
                                <td>
                                    <div class="d-flex flex-wrap gap-2">
                                        <button class="btn btn-sm btn-outline-secondary"
                                                type="button"
                                                data-bs-toggle="collapse"
                                                data-bs-target="#@rid"
                                                aria-expanded="false"
                                                aria-controls="@rid">
                                            Ver resumen
                                        </button>

                                        <form asp-action="RegistrarSalario" asp-controller="Empleados" method="post" class="m-0 d-inline">
                                            <input type="hidden" name="usuarioId" value="@s.UsuarioId" />
                                            <input type="hidden" name="salario" value="@s.SalarioMensual" />
                                            <button type="submit" class="btn btn-sm btn-outline-primary">Editar</button>
                                        </form>

                                        <form asp-action="EliminarSalario"
                                              asp-controller="Empleados"
                                              method="post"
                                              class="m-0 d-inline"
                                              onsubmit="return confirm('¿Desea eliminar este salario?');">
                                            <input type="hidden" name="usuarioId" value="@s.UsuarioId" />
                                            <button type="submit" class="btn btn-sm btn-danger">Eliminar</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>

                            <!-- Resumen colapsable -->
                            <tr class="emp-detail collapse" id="@rid" data-area="@area">
                                <td colspan="4" class="bg-light">
                                    <div class="p-3">
                                        <div class="row g-3">
                                            <!-- Puesto -->
                                            <div class="col-md-3">
                                                <div class="card h-100">
                                                    <div class="card-header">Puesto</div>
                                                    <div class="card-body">
                                                        <div>
                                                            <span class="text-muted">Puesto actual:</span><br />
                                                            <span class="fw-semibold">@((lastPuesto?.Puesto) ?? "—")</span>
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Salario asignado:</span><br />
                                                            @((lastPuesto != null) ? lastPuesto.SalarioAsignado.ToString("C", CultureInfo.GetCultureInfo("es-CR")) : "—")
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Asignado:</span><br />
                                                            @((lastPuesto != null) ? lastPuesto.FechaAsignacion.ToShortDateString() : "—")
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Vacaciones -->
                                            <div class="col-md-3">
                                                <div class="card h-100">
                                                    <div class="card-header">Vacaciones</div>
                                                    <div class="card-body">
                                                        <div>
                                                            <span class="text-muted">Días disponibles:</span><br />
                                                            <span class="fw-semibold">@((lastVac != null) ? lastVac.DiasDisponibles.ToString() : "—")</span>
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Última solicitud:</span><br />
                                                            @((lastVac != null) ? lastVac.FechaSolicitud.ToShortDateString() : "—")
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Estado:</span><br />
                                                            @{
                                                                var estVac = lastVac?.Estado ?? "—";
                                                                var badgeVac = BadgeClase(estVac);
                                                            }
                                                            <span class="badge @badgeVac">@estVac</span>
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Días solicitados (última):</span><br />
                                                            @((lastVac != null) ? lastVac.DiasSolicitados.ToString() : "—")
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Incapacidades -->
                                            <div class="col-md-3">
                                                <div class="card h-100">
                                                    <div class="card-header">Incapacidades</div>
                                                    <div class="card-body">
                                                        <div>
                                                            <span class="text-muted">Estado último:</span><br />
                                                            @{
                                                                var estInc = "—"; // IncapacidadEmpleado no tiene Estado
                                                                var badgeInc = BadgeClase(estInc);
                                                            }
                                                            <span class="badge @badgeInc">@estInc</span>
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Fecha:</span><br />— <!-- sin FechaPresentacion en el modelo -->
                                                        </div>
                                                        <div class="mt-2">
                                                            <span class="text-muted">Descripción:</span>
                                                            <div class="text-truncate" style="max-width: 100%;">@((lastInc?.Descripcion) ?? "—")</div>
                                                        </div>
                                                        <div class="mt-2">
                                                            @if (lastInc?.ArchivoContenido != null)
                                                            {
                                                                <a asp-action="DescargarIncapacidad"
                                                                   asp-controller="Empleados"
                                                                   asp-route-id="@lastInc.Id"
                                                                   class="btn btn-sm btn-outline-primary">
                                                                    Ver/Descargar archivo
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">Sin archivo</span>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Salario -->
                                            <div class="col-md-3">
                                                <div class="card h-100">
                                                    <div class="card-header">Salario</div>
                                                    <div class="card-body">
                                                        <div><span class="text-muted">Actual:</span><br /><span class="fw-semibold">@s.SalarioMensual.ToString("C", CultureInfo.GetCultureInfo("es-CR"))</span></div>
                                                        <div class="mt-2"><span class="text-muted">Registrado:</span><br />@s.FechaRegistro.ToShortDateString()</div>
                                                        <div class="mt-2 text-muted small">Este bloque muestra el salario correspondiente a esta fila.</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div> <!-- row -->
                                    </div> <!-- p-3 -->
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div> <!-- table-responsive -->
        </div> <!-- card-body -->
    </div> <!-- card -->
}
else
{
    <div class="alert alert-warning mt-3">No hay salarios registrados.</div>
}

@section Scripts {
<script>
(function () {
    const $ = id => document.getElementById(id);
    const fDepto    = $('fDepto');
    const fEmpleado = $('fEmpleado');
    const fTexto    = $('fTexto');
    const btnApply  = $('btnAplicar');
    const btnClear  = $('btnLimpiar');

    const rows    = Array.from(document.querySelectorAll('#tablaResumen tbody tr.emp-row'));
    const details = new Map();
    document.querySelectorAll('#tablaResumen tbody tr.emp-detail').forEach(d => details.set(d.id, d));

    // Fila "Sin coincidencias" (una sola vez)
    let emptyRow = document.querySelector('#tablaResumen tbody tr.no-resultados');
    if (!emptyRow) {
        const tbody = document.querySelector('#tablaResumen tbody');
        emptyRow = document.createElement('tr');
        emptyRow.className = 'no-resultados';
        emptyRow.innerHTML = '<td colspan="4" class="text-center text-muted py-3">Sin coincidencias</td>';
        emptyRow.style.display = 'none';
        tbody.appendChild(emptyRow);
    }

    function match(text, q) { return text.toLowerCase().includes(q.toLowerCase()); }

    function applyFilters() {
        const dep = (fDepto?.value || '').trim().toLowerCase();
        const emp = (fEmpleado?.value || '').trim();
        const q   = (fTexto?.value || '').trim();

        let visible = 0;

        rows.forEach(r => {
            const area = (r.getAttribute('data-area') || '').trim().toLowerCase();
            const uid  = (r.getAttribute('data-usuario') || '').trim();
            const text = ((r.getAttribute('data-text') || '') + ' ' + uid).trim();

            let ok = true;
            if (dep) ok = ok && (area === dep);
            if (emp) ok = ok && (uid === emp);
            if (q)   ok = ok && match(text, q);

            r.style.display = ok ? '' : 'none';

            const btn = r.querySelector('[data-bs-target]');
            const rid = btn ? btn.getAttribute('data-bs-target')?.replace('#', '') : null;
            if (rid && details.has(rid)) details.get(rid).style.display = ok ? '' : 'none';

            if (ok) visible++;
        });

        // Mostrar/ocultar "Sin coincidencias"
        if (emptyRow) emptyRow.style.display = (visible === 0 ? '' : 'none');

        // Actualizar contador
        const countEl = document.getElementById('countTotal');
        if (countEl) countEl.textContent = String(visible);
    }

    btnApply?.addEventListener('click', applyFilters);
    fTexto?.addEventListener('keyup', e => { if (e.key === 'Enter') applyFilters(); });

    btnClear?.addEventListener('click', () => {
        if (fDepto)    fDepto.value = '';
        if (fEmpleado) fEmpleado.value = '';
        if (fTexto)    fTexto.value = '';
        applyFilters();
    });

    // Primera pasada (muestra todo)
    applyFilters();
})();
</script>
}