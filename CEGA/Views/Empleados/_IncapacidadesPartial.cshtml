@model IEnumerable<CEGA.Models.IncapacidadEmpleado>
@using System.Linq
@using System.Globalization
@using CEGA.Models

@{
    ViewData["Title"] = "Incapacidades";

    Func<string, string> BadgeClase = estado =>
    {
        if (string.IsNullOrWhiteSpace(estado)) return "bg-warning";
        return estado.Equals("Aprobado", StringComparison.OrdinalIgnoreCase) ? "bg-success"
             : estado.Equals("Rechazado", StringComparison.OrdinalIgnoreCase) ? "bg-danger"
             : "bg-warning";
    };

    // Para el dropdown de empleados y sugerir salario diario (opcional)
    var empleados = ViewBag.Empleados as IEnumerable<ApplicationUser>;
    var salarios = ViewBag.Salarios as IEnumerable<EmpleadosSalarios>;

    var salPorUsuario = salarios?
        .GroupBy(s => s.UsuarioId)
        .ToDictionary(
            g => g.Key,
            g => g.OrderByDescending(x => x.FechaRegistro).FirstOrDefault()?.SalarioMensual ?? 0m
        );
}

<!-- Header -->
<div class="mb-2">
    <h4 class="mb-0">Incapacidades</h4>
    <p class="text-muted mb-0">Una incapacidad corresponde a días no pagados por el patrono. La cobertura de esos días corresponde al gobierno.</p>
</div>

<div class="card card-lg">
    <div class="card-header">Registrar incapacidad</div>
    <div class="card-body">
        <form asp-action="SubirIncapacidad" asp-controller="Empleados" method="post" enctype="multipart/form-data" class="row g-2">
            <div class="col-md-4">
                <label class="form-label" for="usuarioId">Empleado</label>
                <select id="usuarioId" name="usuarioId" class="form-select" required>
                    <option value="">— Seleccione —</option>
                    @if (empleados?.Any() == true)
                    {
                        foreach (var emp in empleados.OrderBy(e => e.UserName))
                        {
                            // Salario mensual (si existe) -> salario diario
                            decimal? sMon = null;
                            if (salPorUsuario != null && !string.IsNullOrEmpty(emp.Id) && salPorUsuario.TryGetValue(emp.Id, out var sm))
                            {
                                sMon = sm;
                            }

                            var sDia = sMon.HasValue ? decimal.Round(sMon.Value / 30m, 2) : (decimal?)null;
                            var sDiaStr = sDia?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? "";
                            var sMonStr = sMon?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? "";

                            // Texto a mostrar: "Nombre Apellido" o UserName
                            var display = string.IsNullOrWhiteSpace(($"{emp?.Nombre} {emp?.Apellido}").Trim())
                            ? (emp?.UserName ?? emp?.Id)
                            : $"{emp?.Nombre?.Trim()} {emp?.Apellido?.Trim()}";

                            <option value="@emp.Id"
                                    data-nombre="@display"
                                    data-salario-mensual="@sMonStr"
                                    data-salario-diario="@sDiaStr">
                                @display
                            </option>
                        }
                    }
                    else
                    {
                        <option value="" disabled>— No hay empleados disponibles —</option>
                    }
                </select>
                <div class="form-text">
                    Si el empleado tiene salario registrado, se sugiere salario diario para el cálculo informativo.
                </div>
            </div>

            <!-- Rango de fechas (opcional) -->
            <div class="col-md-4">
                <label class="form-label d-block">Periodo de incapacidad (opcional)</label>
                <div class="row g-2">
                    <div class="col-6">
                        <input type="datetime-local" id="ini_reg" name="fechaInicio" class="form-control" />
                        <div class="form-text">Inicio</div>
                    </div>
                    <div class="col-6">
                        <input type="datetime-local" id="fin_reg" name="fechaFin" class="form-control" />
                        <div class="form-text">Fin</div>
                    </div>
                </div>
                <div class="small text-muted mt-2">
                    <span id="calc_hrs">0.00</span> h • <span id="calc_dias">0.00</span> d
                </div>
            </div>

            <div class="col-md-4">
                <label class="form-label" for="descripcion">Descripción</label>
                <input id="descripcion" name="descripcion" class="form-control" placeholder="Motivo o detalle de la incapacidad" required />
            </div>

            <div class="col-md-10">
                <label class="form-label" for="archivo">Archivo</label>
                <input id="archivo" name="archivo" type="file" class="form-control" required />
                <div class="form-text">
                    Nota: El cálculo es informativo y no modifica el registro. El pago de los días de incapacidad lo realiza el gobierno; el patrono no paga esos días.
                </div>
            </div>

            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-accent w-100">Subir</button>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <script>
        (function () {
            function round2(x){ return Math.round((x + Number.EPSILON) * 100) / 100; }
            function toDate(v){ const d = new Date(v); return isNaN(d.getTime()) ? null : d; }

            function recalc() {
                const ini = toDate(document.getElementById('ini_reg')?.value);
                const fin = toDate(document.getElementById('fin_reg')?.value);
                let horas = 0;
                if (ini && fin) {
                    horas = Math.max(0, (fin - ini) / 36e5); // ms -> horas
                }
                const dias = horas / 24;
                const hrsEl = document.getElementById('calc_hrs');
                const dayEl = document.getElementById('calc_dias');
                if (hrsEl) hrsEl.textContent = round2(horas).toFixed(2);
                if (dayEl) dayEl.textContent = round2(dias).toFixed(2);
            }

            document.addEventListener('input', function(e){
                if (e.target && (e.target.id === 'ini_reg' || e.target.id === 'fin_reg')) {
                    recalc();
                }
            });
        })();
    </script>
}
