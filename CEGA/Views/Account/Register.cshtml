@model CEGA.Models.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Crear cuenta";
    if (Context.Request.Headers["X-Requested-With"] == "XMLHttpRequest") { Layout = null; }
}

<h2 class="mb-3">Crear cuenta</h2>

<form asp-action="Register" method="post" class="row g-3" data-modal-post>
    @Html.AntiForgeryToken()

    @await Html.PartialAsync("Partials/_RegisterForm", Model)

    @{
        var hayPuestos = Model?.Puestos != null && Model.Puestos.Any();
    }
    <div class="col-md-8">
        <label asp-for="PuestoId" class="form-label">Puesto</label>
        <div class="input-group">
            <select asp-for="PuestoId"
                    asp-items="Model.Puestos"
                    id="PuestoId"
                    class="form-select @(hayPuestos ? "" : "is-empty")"
                    disabled="@(hayPuestos ? (bool?)null : true)">
                <option value="">@(hayPuestos ? "— Seleccione un puesto —" : "— Sin puestos disponibles —")</option>
            </select>
            <button type="button"
                    class="btn btn-outline-primary"
                    onclick="openModal('@Url.Action("PuestoForm", "Account")','Crear puesto')">
                Nuevo puesto
            </button>
        </div>
        @if (!hayPuestos)
        {
            <div class="form-text">Crea el primero para habilitar la selección.</div>
        }
        <span asp-validation-for="PuestoId" class="text-danger"></span>
    </div>

    <div class="col-12 d-flex gap-2">
        <button type="submit" class="btn btn-success">Crear</button>
        <a asp-controller="Account" asp-action="Login" class="btn btn-outline-secondary">Volver a login</a>
    </div>
</form>

@if (TempData["DbgRegister"] is string dbg && !string.IsNullOrWhiteSpace(dbg))
{
    <hr class="my-4" />
    <pre class="alert alert-info" style="white-space:pre-wrap">@dbg</pre>
}

@if (Layout != null)
{
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
}
